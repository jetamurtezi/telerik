@model IEnumerable<telerik.Models.Book>

@{
    var categories = (IEnumerable<telerik.Models.BookCategory>)ViewData["Categories"];
    var languages = categories.Where(c => c.ParentId == null).ToList();
    var genres = categories.Where(c => c.ParentId != null).Select(c => c.Name).Distinct().ToList();
}

@if (TempData["SuccessMessage"] != null)
{
    <div id="successMessage" class="alert alert-success text-center">
        @TempData["SuccessMessage"]
    </div>

    <script>
        setTimeout(function () {
            var msg = document.getElementById("successMessage");
            if (msg) {
                msg.style.transition = "opacity 0.5s ease-out";
                msg.style.opacity = 0;
                setTimeout(function () { msg.remove(); }, 500);
            }
        }, 2000);
    </script>
}

}

<div class="filters">
    <div class="filter-group">
        <h4>Gjuhët</h4>
        <button class="chip active" data-language="All">Të gjitha</button>
        @foreach (var lang in languages)
        {
            <button class="chip" data-language="@lang.Id">@lang.Name</button>
        }
    </div>
    <div class="filter-group">
        <h4>Zhanret</h4>
        <button class="chip active" data-genre="All">Të gjitha</button>
        @foreach (var genre in genres)
        {
            <button class="chip" data-genre="@genre">@genre</button>
        }
    </div>
</div>

<div class="card-grid">
    @foreach (var book in Model)
    {
        <a href="/Book/Details/@book.Id"
           class="book-card"
           data-language="@book.CategoryId"
           data-genre="@book.Genre">
            <img src="@book.CoverImage" alt="Cover" style="max-height: 150px;" />
            <h5>@book.Title</h5>
            <p><strong>Autori:</strong> @book.Author</p>
            <p><strong>Gjuha:</strong> @(categories.FirstOrDefault(c => c.Id == book.CategoryId)?.Name)</p>
            <p><strong>Çmimi:</strong> @book.Price €</p>
        </a>
    }
</div>

@section Scripts {
    <script>
        function applyFilters() {
            const selectedLang = document.querySelector(".chip[data-language].active")?.getAttribute("data-language");
            const selectedGenre = document.querySelector(".chip[data-genre].active")?.getAttribute("data-genre");

            document.querySelectorAll(".book-card").forEach(card => {
                const cardLang = card.getAttribute("data-language");
                const cardGenre = card.getAttribute("data-genre");

                const matchLang = selectedLang === "All" || cardLang === selectedLang;
                const matchGenre = selectedGenre === "All" || cardGenre === selectedGenre;

                card.style.display = (matchLang && matchGenre) ? "block" : "none";
            });
        }

        document.querySelectorAll(".chip[data-language]").forEach(btn => {
            btn.addEventListener("click", () => {
                document.querySelectorAll(".chip[data-language]").forEach(b => b.classList.remove("active"));
                btn.classList.add("active");
                applyFilters();
            });
        });

        document.querySelectorAll(".chip[data-genre]").forEach(btn => {
            btn.addEventListener("click", () => {
                document.querySelectorAll(".chip[data-genre]").forEach(b => b.classList.remove("active"));
                btn.classList.add("active");
                applyFilters();
            });
        });
    </script>
}
